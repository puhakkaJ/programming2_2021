/*
  * This program text file is part of the CS-A1120 Programming 2 course
  * materials at Aalto University in Spring 2021. The programming exercises
  * at CS-A1120 are individual and confidential assignments---this means
  * that as a student taking the course you are allowed to individually
  * and confidentially work with the material, to discuss and review the
  * material with course staff, as well as to submit the material for grading
  * on course infrastructure. All other use, including in particular
  * distribution of the material or exercise solutions, is forbidden and
  * constitutes a violation of the code of conduct at this course.
  *
  */

package longestIncreasingSubsequence

import org.junit.Test
import org.junit.Assert._
import scala.util.Random

/*
 * Unit tests for longestIncreasingSubsequence.
 */

class UnitTests {

  @Test def testN123() {
    assertTrue("testN123() failed", longestIncreasingSubsequence(Array(1)).length == 1)
      // example: 1
  }
  @Test def testN124() {
    assertTrue("testN124() failed", longestIncreasingSubsequence(Array(1, 2)).length == 2)
      // example: 1 < 2
  }
  @Test def testN125() {
    assertTrue("testN125() failed", longestIncreasingSubsequence(Array(2, 1)).length == 1)
      // example: 2
  }
  @Test def testN126() {
    assertTrue("testN126() failed", longestIncreasingSubsequence(Array(3, 2, 1)).length == 1)
      // example: 3
  }
  @Test def testN127() {
    assertTrue("testN127() failed", longestIncreasingSubsequence(Array(1, 2, 3)).length == 3)
      // example: 1 < 2 < 3
  }
  @Test def testN128() {
    assertTrue("testN128() failed", longestIncreasingSubsequence(Array(4, 3, 2, 1, 5, 1)).length == 2)
      // example: 4 < 5
  }
  @Test def testN129() {
    assertTrue("testN129() failed", longestIncreasingSubsequence(Array(0, 3, 3, 2, 1, 0, 3, 2, 0, 2, 2, 2, 3, 4, 3, 2, 0, 4, 4, 1, 3, 4, 1, 3, 1, 3, 0, 4, 3, 1, 0, 1, 2)).length == 5)
      // example: 0 < 1 < 2 < 3 < 4
  }
  @Test def testN130() {
    assertTrue("testN130() failed", longestIncreasingSubsequence(Array(4, 2, 3, 4, 2, 0, 2, 4, 3, 0, 4, 4, 2, 1, 4, 3, 4, 3, 4, 4, 1, 0, 0, 2, 1, 2, 0, 0, 0, 1, 0, 1)).length == 4)
      // example: 0 < 2 < 3 < 4
  }
  @Test def testN131() {
    assertTrue("testN131() failed", longestIncreasingSubsequence(Array(0, 4, 1, 4, 1, 1, 1, 4, 2, 4, 3, 4, 1, 1, 4, 2, 1, 2, 1, 0, 1, 3, 3, 4, 0, 3, 4, 2, 2, 3, 4, 4, 2, 4)).length == 5)
      // example: 0 < 1 < 2 < 3 < 4
  }
  @Test def testN132() {
    assertTrue("testN132() failed", longestIncreasingSubsequence(Array(2, 2, 2, 1, 0, 0, 1, 1, 0, 2, 1, 0, 0, 1, 0, 3, 3, 0, 3, 4, 2, 4, 4, 3, 4, 4, 0)).length == 5)
      // example: 0 < 1 < 2 < 3 < 4
  }
  @Test def testN133() {
    assertTrue("testN133() failed", longestIncreasingSubsequence(Array(1, 1, 2, 1, 3, 4, 3, 1, 4, 4, 1, 2, 1, 1, 0, 3, 0, 0, 2, 1, 3, 2, 4, 4, 1)).length == 4)
      // example: 1 < 2 < 3 < 4
  }
  @Test def testN134() {
    assertTrue("testN134() failed", longestIncreasingSubsequence(Array(3, 4, 0, 4, 0, 3, 2, 1, 3, 1, 4, 2, 0, 1, 2, 4, 0, 1, 4, 1, 2, 0, 3, 4, 0, 4, 2, 1)).length == 5)
      // example: 0 < 1 < 2 < 3 < 4
  }
  @Test def testN135() {
    assertTrue("testN135() failed", longestIncreasingSubsequence(Array(3, 2, 1, 0, 3, 3, 3, 1, 2, 1, 2, 0, 4, 0, 3, 2, 4, 1, 4, 2, 4, 2, 4, 2, 4)).length == 5)
      // example: 0 < 1 < 2 < 3 < 4
  }
  @Test def testN136() {
    assertTrue("testN136() failed", longestIncreasingSubsequence(Array(0, 2, 4, 3, 1, 3, 3, 4, 2, 4, 2, 4, 4, 2, 3, 4, 2, 4, 1, 3, 3, 4, 2, 1, 0)).length == 5)
      // example: 0 < 1 < 2 < 3 < 4
  }
  @Test def testN137() {
    assertTrue("testN137() failed", longestIncreasingSubsequence(Array(0, 0, 2, 2, 0, 0, 2, 1, 0, 4, 0, 3, 4, 0, 4, 1, 1, 1, 4, 1, 3, 3, 4, 3, 1, 0, 2, 1, 1, 2, 0)).length == 4)
      // example: 0 < 2 < 3 < 4
  }
  @Test def testN138() {
    assertTrue("testN138() failed", longestIncreasingSubsequence(Array(1, 1, 2, 2, 4, 2, 4, 0, 2, 1, 4, 0, 0, 1, 0, 3, 0, 1, 4, 4, 3, 3, 3, 1, 3, 3, 2, 4)).length == 4)
      // example: 1 < 2 < 3 < 4
  }
  @Test def testN139() {
    assertTrue("testN139() failed", longestIncreasingSubsequence(Array(2, 1, 7, 1, 5, 6, 9, 1, 3, 2, 9, 9, 7, 4, 9, 4, 7, 7, 2, 7, 2, 5, 9, 1, 0, 1, 3, 6, 8)).length == 6)
      // example: 2 < 3 < 4 < 5 < 6 < 8
  }
  @Test def testN140() {
    assertTrue("testN140() failed", longestIncreasingSubsequence(Array(4, 6, 4, 2, 2, 7, 2, 8, 3, 9, 1, 9, 7, 4, 1, 2, 0, 4, 1, 2, 0, 3, 7, 5, 1)).length == 5)
      // example: 4 < 6 < 7 < 8 < 9
  }
  @Test def testN141() {
    assertTrue("testN141() failed", longestIncreasingSubsequence(Array(7, 4, 8, 1, 2, 3, 2, 8, 2, 5, 6, 7, 5, 6, 5, 6, 7, 1, 4, 9, 8, 4, 1, 1, 1)).length == 7)
      // example: 1 < 2 < 3 < 5 < 6 < 7 < 9
  }
  @Test def testN142() {
    assertTrue("testN142() failed", longestIncreasingSubsequence(Array(9, 9, 5, 9, 5, 2, 9, 4, 2, 1, 9, 9, 0, 3, 2, 7, 9, 3, 8, 0, 0, 8, 9, 8, 6)).length == 5)
      // example: 2 < 4 < 7 < 8 < 9
  }
  @Test def testN143() {
    assertTrue("testN143() failed", longestIncreasingSubsequence(Array(0, 2, 1, 3, 1, 7, 2, 6, 3, 2, 6, 4, 7, 3, 7, 6, 0, 5, 8, 6, 6, 5, 4, 8, 8, 3, 7, 8, 6)).length == 9)
      // example: 0 < 1 < 2 < 3 < 4 < 5 < 6 < 7 < 8
  }
  @Test def testN144() {
    assertTrue("testN144() failed", longestIncreasingSubsequence(Array(9, 6, 8, 7, 9, 5, 1, 4, 5, 6, 8, 6, 8, 2, 5, 5, 0, 6, 2, 7, 4, 8, 6, 7, 9, 4)).length == 7)
      // example: 1 < 4 < 5 < 6 < 7 < 8 < 9
  }
  @Test def testN145() {
    assertTrue("testN145() failed", longestIncreasingSubsequence(Array(8, 9, 9, 4, 7, 8, 1, 2, 6, 2, 3, 9, 5, 0, 6, 5, 4, 5, 7, 9, 1, 1, 0, 6, 6, 0, 6, 1, 7, 2, 0, 8)).length == 8)
      // example: 1 < 2 < 3 < 4 < 5 < 6 < 7 < 8
  }
  @Test def testN146() {
    assertTrue("testN146() failed", longestIncreasingSubsequence(Array(2, 9, 4, 4, 4, 9, 9, 9, 4, 6, 0, 6, 2, 8, 9, 3, 9, 2, 1, 3, 0, 0, 0, 5, 4, 1, 9)).length == 5)
      // example: 2 < 4 < 6 < 8 < 9
  }
  @Test def testN147() {
    assertTrue("testN147() failed", longestIncreasingSubsequence(Array(2, 5, 4, 3, 2, 4, 9, 6, 0, 8, 6, 1, 6, 2, 8, 7, 7, 8, 2, 7, 7, 3, 3, 1, 4, 5, 1, 0, 7, 4, 0)).length == 7)
      // example: 0 < 1 < 2 < 3 < 4 < 5 < 7
  }
  @Test def testN148() {
    assertTrue("testN148() failed", longestIncreasingSubsequence(Array(5, 9, 9, 3, 7, 3, 2, 0, 4, 4, 3, 3, 0, 4, 3, 6, 3, 7, 9, 1, 7, 5, 1, 0, 7, 5, 6, 7, 9, 0)).length == 7)
      // example: 2 < 3 < 4 < 5 < 6 < 7 < 9
  }
  @Test def testN149() {
    assertTrue("testN149() failed", longestIncreasingSubsequence(Array(36, 25, 17, 10, 71, 40, 24, 96, 80, 52, 57, 43, 89, 93, 62, 89, 76, 18, 99, 17, 90, 71, 56, 41, 30, 33, 26)).length == 7)
      // example: 36 < 40 < 52 < 57 < 89 < 93 < 99
  }
  @Test def testN150() {
    assertTrue("testN150() failed", longestIncreasingSubsequence(Array(61, 20, 48, 99, 19, 80, 54, 63, 34, 65, 43, 69, 84, 46, 23, 45, 3, 58, 19, 89, 36, 90, 69, 78, 4, 58, 85, 14, 55)).length == 9)
      // example: 20 < 48 < 54 < 63 < 65 < 69 < 84 < 89 < 90
  }
  @Test def testN151() {
    assertTrue("testN151() failed", longestIncreasingSubsequence(Array(46, 40, 27, 97, 0, 67, 93, 51, 78, 58, 32, 84, 63, 76, 39, 73, 22, 56, 18, 45, 26, 85, 25, 96, 25, 5)).length == 7)
      // example: 46 < 51 < 58 < 63 < 76 < 85 < 96
  }
  @Test def testN152() {
    assertTrue("testN152() failed", longestIncreasingSubsequence(Array(73, 57, 88, 73, 79, 74, 0, 3, 35, 71, 7, 54, 72, 47, 97, 25, 24, 36, 13, 34, 91, 18, 43, 5, 19, 66, 44, 38, 67, 87)).length == 9)
      // example: 0 < 3 < 7 < 25 < 36 < 43 < 66 < 67 < 87
  }
  @Test def testN153() {
    assertTrue("testN153() failed", longestIncreasingSubsequence(Array(72, 16, 51, 17, 6, 21, 92, 59, 54, 78, 41, 33, 94, 85, 83, 56, 2, 46, 57, 44, 73, 6, 47, 47, 0)).length == 7)
      // example: 16 < 17 < 21 < 54 < 56 < 57 < 73
  }
  @Test def testN154() {
    assertTrue("testN154() failed", longestIncreasingSubsequence(Array(28, 21, 77, 2, 51, 3, 30, 42, 40, 31, 4, 33, 73, 44, 99, 81, 79, 87, 52, 69, 88, 34, 2, 77, 54, 92, 0, 49, 37, 7)).length == 10)
      // example: 2 < 3 < 30 < 31 < 33 < 73 < 81 < 87 < 88 < 92
  }
  @Test def testN155() {
    assertTrue("testN155() failed", longestIncreasingSubsequence(Array(18, 55, 34, 4, 80, 41, 74, 69, 48, 15, 52, 40, 43, 37, 64, 82, 77, 1, 15, 65, 44, 92, 47, 50, 99, 8, 7, 54, 88, 76, 27, 11, 84, 28)).length == 10)
      // example: 18 < 34 < 41 < 43 < 44 < 47 < 50 < 54 < 76 < 84
  }
  @Test def testN156() {
    assertTrue("testN156() failed", longestIncreasingSubsequence(Array(56, 18, 21, 63, 69, 37, 37, 1, 82, 32, 80, 2, 79, 33, 22, 43, 89, 94, 29, 8, 92, 69, 87, 60, 21, 83, 97, 60)).length == 8)
      // example: 18 < 21 < 63 < 69 < 82 < 89 < 94 < 97
  }
  @Test def testN157() {
    assertTrue("testN157() failed", longestIncreasingSubsequence(Array(24, 43, 63, 61, 17, 19, 93, 15, 38, 42, 22, 70, 35, 74, 86, 15, 99, 15, 52, 52, 88, 25, 96, 58, 94, 26)).length == 9)
      // example: 17 < 19 < 38 < 42 < 70 < 74 < 86 < 88 < 96
  }
  @Test def testN158() {
    assertTrue("testN158() failed", longestIncreasingSubsequence(Array(55, 10, 62, 61, 24, 83, 63, 48, 75, 62, 68, 76, 58, 63, 29, 99, 55, 92, 36, 89, 69, 32, 71, 10, 42, 5, 38, 24, 63, 88, 38, 79, 17)).length == 8)
      // example: 10 < 24 < 48 < 62 < 68 < 69 < 71 < 88
  }
  @Test def testN159() {
    assertTrue("testN159() failed", longestIncreasingSubsequence(Array(56, 66, 12, 85, 64, 72, 81, 23, 10, 65, 26, 39, 50, 32, 27, 51, 20, 38, 5, 15, 87, 41, 86, 52, 51)).length == 7)
      // example: 12 < 23 < 26 < 39 < 50 < 51 < 87
  }
  @Test def testN160() {
    assertTrue("testN160() failed", longestIncreasingSubsequence(Array(40, 84, 82, 33, 62, 93, 0, 92, 29, 9, 19, 15, 29, 58, 22, 87, 76, 40, 34, 5, 32, 60, 75, 26, 88, 62, 86, 13, 81, 11, 52, 85, 55, 73)).length == 9)
      // example: 0 < 9 < 19 < 29 < 58 < 60 < 75 < 81 < 85
  }
  @Test def testN161() {
    assertTrue("testN161() failed", longestIncreasingSubsequence(Array(21, 8, 61, 52, 19, 86, 68, 60, 21, 61, 94, 92, 39, 91, 11, 61, 81, 31, 59, 86, 88, 69, 62, 97, 66, 47, 97, 48, 67, 66, 12, 84, 23, 49)).length == 9)
      // example: 8 < 19 < 21 < 39 < 61 < 81 < 86 < 88 < 97
  }
  @Test def testN162() {
    assertTrue("testN162() failed", longestIncreasingSubsequence(Array(81, 21, 12, 26, 78, 74, 41, 87, 68, 40, 35, 31, 66, 78, 47, 17, 11, 41, 48, 2, 23, 35, 20, 62, 41, 60, 9, 41, 30, 63, 42, 5)).length == 7)
      // example: 21 < 26 < 41 < 47 < 48 < 62 < 63
  }
  @Test def testN163() {
    assertTrue("testN163() failed", longestIncreasingSubsequence(Array(57, 14, 86, 73, 57, 79, 57, 27, 42, 48, 38, 57, 86, 30, 57, 68, 24, 29, 39, 73, 98, 63, 15, 90, 5, 14, 20, 16, 69)).length == 8)
      // example: 14 < 27 < 42 < 48 < 57 < 68 < 73 < 98
  }
  @Test def testN164() {
    assertTrue("testN164() failed", longestIncreasingSubsequence(Array(74, 55, 44, 0, 53, 62, 4, 81, 25, 39, 78, 83, 45, 99, 95, 6, 55, 67, 69, 41, 45, 70, 45, 29, 78, 47, 45, 19, 52, 3, 45, 31)).length == 10)
      // example: 0 < 4 < 25 < 39 < 45 < 55 < 67 < 69 < 70 < 78
  }
  @Test def testN165() {
    assertTrue("testN165() failed", longestIncreasingSubsequence(Array(96, 88, 14, 63, 5, 77, 20, 5, 17, 83, 51, 91, 8, 55, 88, 43, 86, 53, 79, 48, 83, 70, 82, 57, 68, 60, 55, 45, 87)).length == 7)
      // example: 14 < 20 < 51 < 55 < 79 < 83 < 87
  }
  @Test def testN166() {
    assertTrue("testN166() failed", longestIncreasingSubsequence(Array(48, 27, 53, 13, 56, 3, 45, 54, 28, 55, 22, 6, 52, 69, 87, 71, 83, 49, 91, 87, 51, 59, 84, 47, 70, 7, 61, 87, 35, 21)).length == 9)
      // example: 48 < 53 < 54 < 55 < 69 < 71 < 83 < 84 < 87
  }
  @Test def testN167() {
    assertTrue("testN167() failed", longestIncreasingSubsequence(Array(7, 64, 11, 44, 25, 47, 38, 91, 81, 1, 78, 24, 30, 19, 75, 93, 79, 45, 5, 52, 99, 26, 87, 71, 81, 61, 12, 46)).length == 8)
      // example: 7 < 11 < 25 < 38 < 45 < 52 < 71 < 81
  }
  @Test def testN168() {
    assertTrue("testN168() failed", longestIncreasingSubsequence(Array(89, 14, 39, 88, 16, 52, 75, 99, 18, 27, 38, 27, 22, 2, 49, 7, 87, 56, 61, 71, 40, 20, 59, 34, 74, 35, 91, 80, 30, 92)).length == 12)
      // example: 14 < 16 < 18 < 27 < 38 < 49 < 56 < 61 < 71 < 74 < 91 < 92
  }
  @Test def testN169() {
    assertTrue("testN169() failed", longestIncreasingSubsequence(Array(883, 891, 317, 948, 520, 219, 357, 292, 436, 510, 300, 623, 436, 165, 227, 459, 678, 324, 621, 856, 551, 741, 232, 782, 867, 281, 388, 482, 552, 458, 3, 319, 544, 509, 69, 874, 457, 203, 975, 342, 682, 6, 575, 565, 36, 104, 166, 80, 2, 462, 842, 829, 55, 548, 71, 616, 667, 251, 634, 661, 41, 277, 546, 193, 728, 289, 435, 472, 892, 290, 264, 776, 353, 802, 476, 549, 227, 843, 333, 166, 108, 766, 142, 13, 659, 237, 464, 988, 277, 106, 428, 619, 715, 891, 807, 542, 104, 997, 579, 442, 173, 845, 245, 704, 283, 726, 712, 426, 269, 28, 518, 251, 175, 295, 94, 995, 622, 427, 183, 104, 62, 612, 143, 136, 114, 775, 744, 947, 435, 900, 128, 165, 880, 136, 195, 689, 999, 886, 135, 329, 37, 261, 92, 242, 184, 981, 70, 668, 438, 723, 384, 527, 945, 245, 991, 289, 634, 663, 416, 508, 30, 283, 391, 941, 809, 710, 309, 622, 222, 175, 261, 750, 209, 844, 219, 894, 857, 885, 9, 228, 421, 897, 368, 676, 634, 943, 559, 714, 718, 461, 827, 661, 812, 660, 251, 133, 564, 29, 319, 653, 926, 300, 397, 460, 571, 682, 847, 797, 129, 306, 76, 454, 697, 369, 697, 349, 886, 752, 108, 750, 964, 741, 573, 250, 346, 301, 570, 874, 453, 767, 677, 105, 443, 210, 92, 375, 441, 222, 940, 562, 185, 744, 83, 54, 876, 143, 897, 605, 984, 539, 970, 258, 254, 733, 475, 943, 651, 857, 670, 559, 344, 673, 931, 30, 760, 971, 117, 148, 613, 491, 607, 344, 96, 547, 673, 473, 483, 94, 731, 680, 836, 972, 932, 313, 161, 63, 479, 257, 803, 173, 923, 73, 825, 150, 134, 400, 529, 117, 477, 591, 492, 516, 707, 813, 959, 872, 291, 819, 370, 491, 779, 914, 527, 856, 503, 464, 433, 713, 15, 626, 87, 516, 127, 339, 379, 636, 977, 115, 611, 964, 376, 459, 923, 158, 411, 444, 636, 922, 781, 311, 989, 850, 61, 351, 725, 370, 271, 627, 210, 533, 38, 439, 522, 154, 564, 546, 107, 405, 127, 467, 865, 874, 378, 84, 548, 717, 893, 321, 170, 205, 826, 90, 544, 447, 958, 115, 361, 798, 143, 836, 752, 399, 288, 597, 760, 227, 678, 922, 814, 286, 478, 660, 703, 669, 878, 479, 172, 252, 612, 560, 270, 661, 447, 951, 943, 221, 824, 698, 111, 384, 276, 402, 655, 397, 241, 366, 486, 276, 266, 365, 46, 579, 945, 194, 426, 32, 360, 752, 886, 329, 437, 532, 483, 919, 559, 90, 558, 745, 313, 320, 739, 621, 50, 335, 691, 97, 381, 487, 295, 232, 36, 170, 96, 400, 293, 601, 261, 727, 318, 474, 312, 174, 362, 475, 542, 70, 480, 665, 96, 823, 868)).length == 36)
      // example: 3 < 6 < 36 < 55 < 71 < 108 < 142 < 173 < 175 < 183 < 195 < 209 < 219 < 228 < 251 < 300 < 306 < 369 < 375 < 441 < 562 < 605 < 651 < 670 < 673 < 760 < 803 < 813 < 819 < 856 < 865 < 874 < 893 < 922 < 943 < 945
  }
  @Test def testN170() {
    assertTrue("testN170() failed", longestIncreasingSubsequence(Array(594, 552, 804, 463, 264, 888, 297, 573, 896, 123, 96, 579, 952, 232, 44, 693, 5, 503, 954, 178, 13, 208, 713, 544, 402, 406, 547, 285, 563, 915, 445, 393, 192, 917, 847, 767, 9, 918, 856, 978, 748, 129)).length == 11)
      // example: 123 < 178 < 208 < 402 < 406 < 547 < 563 < 915 < 917 < 918 < 978
  }
  @Test def testN171() {
    assertTrue("testN171() failed", longestIncreasingSubsequence(Array(268, 618, 32, 124, 162, 253, 339, 257, 283, 96, 395, 532, 87, 227, 252, 343, 53, 273, 729, 0, 692, 672, 721, 222, 467, 12, 255, 21, 508, 656, 55, 996, 498, 978, 764, 287, 396, 938, 327, 854, 26, 567, 610, 273, 644, 758, 643, 318, 338, 440, 804, 497, 942, 990, 231, 879, 670, 883, 622, 470, 773, 447, 208, 620, 465, 676, 136, 635, 999, 455, 8, 422, 354, 452, 371, 971, 643, 694, 47, 77, 107, 794, 801, 796, 123, 966, 699, 59, 308, 444, 984, 14, 667, 493, 697, 886, 916, 596, 248, 155, 767, 448, 224, 397, 232, 333, 504, 550, 416, 167, 45, 663, 226, 796, 76, 950, 0, 437, 921, 857, 227, 265, 241, 826, 321, 23, 260, 878, 856, 413, 663, 699, 777, 130, 494, 942, 856, 644, 606, 191, 896, 342, 639, 962, 779, 754, 481, 786, 679, 671, 406, 227, 668, 831, 69, 116, 826, 920, 799, 488, 272, 341, 578, 808, 927, 256, 891, 294, 925, 678, 848, 360, 645, 287, 123, 639, 611, 824, 395, 492, 133, 351, 605, 54, 213, 546, 96, 562, 260, 781, 973, 247, 249, 774, 765, 740, 894, 454, 860, 529, 643, 471, 332, 559, 684, 492, 205, 557, 517, 514, 407, 840, 503, 897, 882, 494, 410, 542, 589, 646, 890, 233, 147, 832, 454, 173, 427, 821, 243, 337, 374, 170, 199, 627, 324, 487, 353, 92, 999, 182, 782, 475, 505, 522, 655, 338, 194, 422, 206, 95, 649, 230, 671, 88, 163, 726, 68, 271, 610, 990, 888, 77, 69, 294, 197, 790, 453, 460, 560, 648, 103, 599, 306, 801, 621, 14, 234, 941, 320, 642, 134, 433, 912, 205, 649, 239, 595, 262, 326, 750, 980, 19, 426, 764, 899, 937, 104, 531, 787, 66, 182, 718, 288, 691, 316, 903, 703, 849, 205, 750, 808, 256, 238, 743, 702, 320, 403, 89, 103, 412, 153, 943, 814, 472, 574, 477, 198, 998, 708, 56, 457, 309, 733, 562, 407, 511, 785, 488, 714, 526, 346, 458, 302, 250, 104, 799, 750, 681, 161, 843, 801, 827, 168, 902, 708, 441, 950, 289, 361, 98, 590, 23, 581, 938, 546, 806, 143, 119, 780, 698, 867, 776, 487, 788, 991, 845, 587, 556, 957, 894, 142, 160, 927, 817, 136, 823, 729, 730, 384, 182, 344, 689, 546, 966, 73, 131, 978, 617, 804, 774, 761, 759, 262, 470, 38, 905, 902, 244, 737, 185, 479, 817, 328, 188, 436, 455, 620, 381, 467, 352, 318, 304, 32, 598, 83, 399, 58, 854, 303, 220, 314, 25, 166, 860, 223, 865, 973, 516, 503, 956, 966, 675, 800, 552, 458, 444, 85, 268, 953, 310, 52, 582, 630, 417, 948, 886, 518, 63, 115, 566, 758, 773, 357, 316, 396, 5, 338, 862, 750, 594, 854, 689, 887, 510, 428, 806, 104, 827, 796, 114, 595, 868, 321, 920, 602, 360, 176, 5, 846, 507, 474, 711, 620, 216, 610, 491, 530, 918, 546, 953, 927, 254, 656, 719, 320, 31, 38, 839, 214, 190, 215, 813, 565, 165, 933, 722, 608, 142, 48, 342, 808, 965, 561, 509, 611, 775, 884, 57, 1, 635, 228, 999, 530, 252, 424, 521, 572, 408, 723, 327, 248, 984, 786, 811, 507, 947, 998, 568, 299, 545, 985, 478, 431, 306, 277, 229, 169, 689, 544, 754, 544, 312, 692, 339, 469, 473, 283, 467, 999, 358, 503, 323, 322, 757, 831, 446, 882, 948, 118, 358, 854, 821, 30, 288, 768, 846, 274, 297, 681, 919, 648, 124, 48, 89, 717, 209, 75, 552, 699, 619, 134, 820, 294, 966, 0, 842, 52, 394, 550, 530, 242, 17, 335, 828, 963, 889, 166, 172, 827, 711, 526, 519, 962, 545, 256, 745, 37, 29, 775, 197, 838, 859, 741, 376, 971, 995, 686, 482, 20, 181, 962, 946, 230, 588, 257, 989, 221, 893, 326, 82, 958, 578, 742, 381, 746, 813, 90, 62, 686, 331, 567, 605, 447, 551, 735, 869, 652, 424, 721, 450, 796, 209, 859, 656, 445, 162, 399, 313, 38, 152, 484, 635, 973, 550, 539, 236, 58, 190, 930, 98, 477, 688, 430, 780, 715, 301, 849, 582, 179, 8, 835, 509, 246, 402, 516, 144, 29, 849, 247, 198, 405, 165, 955, 562, 893, 207, 507, 568, 736, 390, 589, 755, 510, 518, 544, 204, 421, 935, 342, 569, 364, 768, 737, 367, 80, 830, 610, 854, 824, 405, 772, 408, 531, 921, 583, 909, 130, 457, 201, 238, 343, 937, 871, 843, 340, 419, 41, 235, 1, 833, 811, 64, 29, 658, 279, 773, 581, 471, 168, 565, 875, 832, 34, 58, 190, 343, 957, 910, 287, 705, 472, 329, 852, 924, 723, 975, 541, 370, 964, 197, 91, 593, 99, 224, 664, 812, 49, 747, 466, 545, 251, 651, 578, 479, 181, 200, 273, 396, 529, 458, 737, 441, 838, 341, 777, 723, 85, 835, 619, 943, 711, 789, 319, 977, 955, 654, 731, 0, 732, 363, 386, 945, 198, 418, 456, 455, 617, 999, 400, 628, 206, 565, 964, 31, 398, 607, 748, 458, 682, 803, 979, 558, 141, 959, 890, 797, 142, 380, 743, 188, 762, 915, 849, 211, 886, 168, 834, 131, 514, 210, 863, 907, 792, 651, 868, 326, 516, 475, 456, 76, 46, 963, 296, 739, 946, 328, 232, 899, 537, 679, 771, 899, 584, 735, 251, 259, 326, 615, 540, 895, 900, 253, 971, 636, 253, 832)).length == 57)
      // example: 0 < 12 < 21 < 26 < 47 < 77 < 107 < 123 < 130 < 133 < 147 < 173 < 182 < 194 < 206 < 230 < 234 < 239 < 262 < 288 < 316 < 320 < 403 < 412 < 472 < 477 < 511 < 526 < 546 < 556 < 582 < 594 < 595 < 602 < 610 < 611 < 635 < 689 < 692 < 699 < 711 < 741 < 742 < 746 < 813 < 835 < 849 < 854 < 871 < 875 < 910 < 924 < 943 < 955 < 959 < 963 < 971
  }
  @Test def testN172() {
    assertTrue("testN172() failed", longestIncreasingSubsequence(Array(754, 628, 587, 298, 478, 300, 575, 824, 955, 450, 483, 899, 957, 87, 571, 186, 617, 963, 578, 861, 20, 627, 804, 746, 63, 739, 237, 319, 180, 526, 144, 506, 495, 50, 989, 381, 60, 769, 707, 165, 217, 833, 477, 729, 87, 869, 235, 287, 523, 949, 488, 970, 819, 817, 500, 416, 391, 179, 981, 816, 118, 353, 895, 792, 706, 506, 989, 405, 497, 936, 666, 332, 265, 619, 137, 133, 270, 431, 861, 551, 387, 332, 518, 646, 308, 803, 305, 201, 675, 848, 882, 40, 991, 578, 120, 275, 477, 880, 590, 614, 946, 750, 258, 625, 214, 180, 931, 867, 582, 344, 764, 270, 567, 666, 111, 301, 266, 957, 80, 818, 560, 726, 479, 893, 835, 236, 225, 463, 734, 56, 812, 29, 650, 166, 357, 383, 679, 673, 816, 648, 947, 804, 179, 464, 154, 437, 624, 324, 18, 836, 621, 687, 713, 953, 273, 690, 781, 236, 797, 600, 680, 614, 524, 173, 446, 573, 960, 268, 405, 580, 3, 198, 936, 328, 200, 296, 928, 871, 932, 6, 935, 228, 635, 660, 506, 509, 483, 548, 98, 766, 831, 849, 71, 686, 921, 474, 970, 790, 144, 114, 445, 746, 937, 892, 442, 200, 157, 779, 5, 518, 879, 648, 982, 576, 96, 293, 7, 998, 113, 694, 422, 884, 780, 311, 95, 132, 224, 416, 394, 318, 959, 262, 380, 903, 781, 355, 213, 311, 615, 613, 397, 68, 334, 548, 699, 197, 127, 261, 420, 897, 200, 404, 116, 477, 544, 342, 317, 932, 964, 940, 937, 864, 370, 515, 885, 95, 763, 857, 92, 458, 754, 202, 324, 423, 804, 640, 746, 54, 619, 393, 301, 440, 531, 586, 193, 51, 103, 818, 803, 490, 81, 649, 260, 993, 53, 111, 4, 655, 792, 825, 124, 380, 362, 805, 215, 282, 885, 895, 606, 31, 329, 365, 871, 496, 438, 989, 121, 66, 685, 998, 631, 394, 76, 339, 334, 477, 716, 188, 893, 905, 816, 439, 472, 258, 627, 220, 681, 752, 862, 374, 484, 286, 518, 717, 284, 726, 6, 632, 895, 351, 166, 55, 203, 256, 264, 503, 308, 527, 930, 807, 844, 586, 101, 359, 205, 839, 777, 537, 830, 655, 83, 455, 487, 812, 308, 956, 522, 852, 815, 639, 888, 510, 878, 945, 189, 657, 681, 560, 386, 139, 653, 764, 429, 303, 781, 118, 23, 136, 520, 601, 978, 674, 247, 896, 652, 208, 240, 263, 476, 503, 691, 406, 888, 714, 481, 72, 809, 999, 556, 602, 940, 910, 144, 414, 701, 930, 444, 111, 74, 512, 444, 559, 33, 669, 6, 997, 479, 460, 838, 226, 302, 644, 705, 354, 930, 615, 243, 536, 257, 991, 965, 217, 917, 908, 166, 483, 791, 105, 397, 495, 417, 708, 808, 153, 407, 187, 348, 16, 27, 4, 834, 249, 733, 277, 458, 238, 731, 34, 495, 100, 778, 629, 463, 474, 961, 776, 813, 453, 750, 430, 388, 32, 240, 831, 186, 169, 249, 322, 126, 407, 453, 333, 352, 679, 539, 208, 276, 934, 191, 727, 387, 465, 113, 510, 902, 96, 830, 543, 383, 201, 384, 950, 182, 496, 765, 342, 68, 44, 73, 877, 368, 109, 177, 810, 988, 442, 366, 439, 803, 967, 105, 745, 865, 427, 297, 180, 166, 743, 166, 12, 241, 955, 601, 750, 758, 427, 26, 77, 451, 38, 789, 824, 493, 495, 714, 336, 721, 332, 712, 968, 25, 492, 174, 341, 14, 694, 950, 989, 557, 668, 38, 748, 303, 30, 771, 873, 848, 387, 460, 727, 148, 91, 232, 239, 961, 135, 382, 275, 797, 282, 527, 397, 717, 153, 514, 534, 102, 181, 44, 267, 164, 754, 129, 810, 573, 727, 723, 146, 913, 526, 606, 472, 73, 310, 910, 246, 120, 515, 606, 878, 250, 528, 414, 484, 816, 986, 760, 393, 149, 909, 679, 900, 881, 61, 468, 619, 719, 875, 558, 663, 156, 447, 909, 309, 855, 196, 332, 313, 79, 919, 225, 677, 222, 801, 41, 783, 360, 68, 789, 681, 615, 138, 227, 338, 287, 457, 499, 218, 49, 123, 223, 882, 702, 570, 509, 418, 882, 441, 4, 796, 946, 909, 977, 613, 227, 18, 869, 652, 57, 746, 804, 403, 624, 512, 597, 355, 947, 459, 113, 244, 527, 950, 674, 857, 850, 564, 553, 690, 205, 465, 76, 891, 388, 987, 394, 130, 86, 807, 20, 814, 813, 376, 267, 770, 588, 923, 992, 425, 920, 102, 83, 252, 540, 886, 91, 431, 213, 208, 22, 649, 294, 879, 183, 186, 393, 540, 370, 527, 275, 660, 828, 577, 859, 827, 779, 475, 15, 198, 367, 666, 514, 134, 509, 31, 654, 737, 86, 40, 42, 682, 960, 885, 640, 928, 696, 509, 870, 973, 395, 761, 6, 37, 224, 912, 220, 950, 115, 386, 900, 694, 624, 753, 902, 184, 906, 568, 815, 801, 560, 119, 493, 343, 274, 999, 806, 728, 478, 136, 798, 16, 961, 499, 195, 205, 156, 649, 334, 821, 549, 730, 713, 583, 975, 817, 383, 431, 719, 892, 901, 138, 899, 538, 915, 865, 889, 246, 446, 667, 82, 648, 293, 331, 577, 34, 510, 809, 92, 303, 421, 132, 686, 759, 368, 877, 734, 312, 458, 127, 471, 919, 10, 250, 829, 748, 591, 822, 521, 83, 994, 901, 713, 679, 856, 49, 519, 857, 899, 933, 252, 246, 692, 928, 945, 70, 39, 147, 362, 737, 602, 620, 936, 636, 99, 91, 601, 609, 694, 682, 453, 605, 744, 769, 688, 786, 770, 623, 623, 573, 253, 5, 689, 402, 919, 916, 76, 587, 952, 207, 336, 815, 740, 59, 996, 888, 68, 802, 539, 525, 99, 351, 586, 181, 186, 660, 585, 261, 224, 952, 276, 825, 554, 324, 573, 631, 595, 644, 200, 441, 728, 795, 267, 760, 882, 359, 935, 30, 129, 363, 575, 364, 762, 331, 596, 498)).length == 55)
      // example: 20 < 50 < 60 < 87 < 118 < 137 < 201 < 214 < 225 < 236 < 268 < 296 < 311 < 318 < 380 < 397 < 420 < 423 < 438 < 439 < 472 < 484 < 518 < 527 < 586 < 655 < 657 < 681 < 691 < 701 < 705 < 708 < 733 < 745 < 750 < 758 < 771 < 783 < 789 < 796 < 804 < 807 < 814 < 828 < 859 < 885 < 900 < 902 < 906 < 915 < 919 < 933 < 945 < 952 < 996
  }
  @Test def testN173() {
    assertTrue("testN173() failed", longestIncreasingSubsequence(Array(34, 378, 837, 101, 0, 747, 842, 148, 600, 854, 937, 635, 141, 484, 92, 763, 804, 207, 279, 763, 556, 199, 762, 334, 890, 377, 42, 904, 57, 438, 102, 989, 895, 190, 748, 734, 579, 8, 307, 457, 699, 711, 124, 491, 713, 162, 178, 981, 213, 496, 320, 281, 70, 853, 313, 791, 282, 934, 723, 808, 910, 245, 765, 78, 591, 218, 615, 622, 606, 710, 609, 867, 409, 676, 220, 752, 791, 415, 244, 802, 340, 442, 799, 888, 650, 656, 911, 167, 216, 729, 795, 22, 228, 101, 940, 491, 189, 96, 995, 873, 540, 730, 288, 55, 824, 554, 589, 445, 584, 846, 328, 69, 315, 713, 528, 196, 523, 522, 847, 756, 952, 205, 166, 527, 417, 857, 726, 290, 590, 485, 506, 908, 705, 495, 339, 793, 858, 115, 683, 239, 370, 156, 714, 140, 175, 986, 775, 930, 694, 64, 478, 417, 670, 696, 984, 119, 705, 294, 768, 614, 918, 990, 210, 178, 961, 307, 662, 885, 381, 485, 18, 289, 536, 421, 181, 506, 124, 64, 208, 229, 93, 366, 391, 673, 326, 230, 213, 537, 30, 448, 310, 754, 592, 942, 813, 503, 793, 199, 182, 943, 195, 650, 734, 984, 782, 156, 734, 834, 813, 367, 47, 762, 654, 879, 175, 801, 795, 41, 153, 217, 846, 42, 107, 372, 794, 225, 521, 480, 988, 562, 759, 531, 744, 16, 491, 335, 312, 398, 873, 234, 335, 723, 432, 892, 812, 912, 225, 422, 778, 782, 704, 548, 156, 257, 516, 510, 734, 371, 784, 801, 607, 478, 308, 852, 378, 82, 357, 26, 363, 327, 640, 876, 102, 992, 351, 600, 988, 940, 802, 914, 287, 322, 223, 693, 933, 672, 956, 869, 841, 992, 456, 884, 372, 528, 881, 272, 923, 868, 753, 294, 426, 682, 626, 621, 678, 938, 136, 753, 216, 160, 718, 506, 358, 944, 992, 512, 715, 956, 551, 821, 47, 669, 900, 944, 761, 667, 548, 913, 880, 3, 257, 574, 401, 540, 329, 281, 979, 526, 927, 779, 870, 696, 328, 778, 938, 252, 952, 458, 476, 897, 683, 683, 819, 340, 687, 838, 625, 325, 470, 981, 517, 73, 178, 222, 613, 585, 833, 68, 352, 574, 240, 915, 50, 976, 804, 838, 945, 546, 915, 270, 76, 251, 881, 840, 283, 211, 719, 532, 529, 703, 14, 790, 342, 476, 224, 115, 641, 572, 143, 978, 731, 896, 208, 572, 894, 355, 471, 673, 957, 774, 94, 889, 389, 101, 528, 619, 209, 933, 279, 526, 603, 472, 117, 945, 478, 583, 584, 561, 665, 458, 935, 879, 974, 215, 329, 691, 104, 333, 845, 601, 618, 12, 3, 166, 213, 740, 889, 111, 282, 766, 994, 998, 357, 658, 570, 635, 602, 870, 756, 499, 626, 607)).length == 40)
      // example: 34 < 42 < 57 < 102 < 124 < 162 < 178 < 213 < 281 < 313 < 409 < 415 < 442 < 491 < 540 < 554 < 589 < 590 < 683 < 694 < 696 < 705 < 754 < 762 < 778 < 782 < 784 < 801 < 852 < 876 < 884 < 900 < 913 < 927 < 938 < 952 < 976 < 978 < 994 < 998
  }
  @Test def testN174() {
    assertTrue("testN174() failed", longestIncreasingSubsequence(Array(959, 917, 495, 840, 27, 363, 116, 313, 521, 86, 945, 680, 665, 711, 539, 371, 40, 569, 426, 958, 523, 539, 114, 494, 126, 246, 493, 18, 253, 6, 774, 562, 749, 318, 885, 593, 608, 748, 778, 167, 804, 587, 688, 623, 927, 64, 159, 48, 353, 804, 445, 342, 838, 119, 651, 272, 271, 774, 528, 4, 627, 27, 412, 527, 399, 571, 475, 201, 775, 686, 724, 404, 231, 455, 20, 109, 43, 418, 396, 60, 384, 405, 868, 302, 957, 631, 746, 250, 321, 390, 179, 40, 962, 349, 45, 596, 463, 553, 31, 746, 499, 125, 141, 100, 23, 492, 499, 823, 50, 563, 366, 404, 87, 777, 626, 826, 164, 510, 155, 312, 642, 801, 75, 752, 366, 110, 724, 199, 227, 476, 363, 705, 233, 325, 354, 498, 918, 462, 977, 855, 815, 270, 216, 355, 316, 292, 138, 718, 101, 961, 209, 111, 493, 156, 347, 802, 17, 204, 614, 540, 149, 216, 309, 491, 388, 674, 639, 507, 537, 451, 408, 435, 207, 176, 694, 574, 1, 9, 186, 510, 759, 66, 969, 634, 61, 819, 799, 64, 354, 698, 839, 846, 122, 953, 480, 738, 640, 425, 343, 834, 12, 157, 421, 22, 997, 36, 134, 25, 483, 214, 526, 102, 947, 367, 703, 254, 104, 642, 395, 632, 506, 901, 458, 290, 798, 746, 209, 148, 458, 453, 359, 420, 83, 545, 709, 611, 805, 758, 234, 463, 990, 149, 608, 218, 455, 796, 870, 407, 240, 316, 299, 916, 439, 703, 524, 147, 317, 608, 138, 435, 85, 291, 11, 396, 762, 3, 235, 632, 372, 570, 79, 20, 430, 571, 805, 462, 919, 723, 899, 640, 618, 870, 883, 754, 637, 678, 856, 446, 811, 159, 601, 5, 62, 421, 478, 863, 925, 687, 435, 344, 221, 205, 544, 429, 759, 740, 330, 910, 662, 314, 650, 110, 67, 188, 232, 429, 375, 214, 844, 95, 660, 298, 232, 788, 368, 425, 805, 376, 767, 24, 305, 14, 652, 274, 586, 454, 532, 691, 770, 638, 440, 988, 726, 92, 21, 786, 373, 49, 713, 881, 313, 256, 227, 999, 133, 230, 807, 699, 332, 364, 782, 571, 945, 120, 182, 605, 865, 18, 979, 189, 617, 562, 321, 302, 884, 182, 349, 316, 837, 25, 311, 957, 486, 800, 942, 56, 859, 14, 552, 597, 710, 199, 300, 804, 344, 505, 199, 234, 768, 134, 143, 662, 947, 158, 359, 418, 768, 866, 839, 157, 470, 131, 670, 525, 701, 993, 855, 778, 718, 879, 799, 917, 400, 492, 319, 783, 912, 677, 825, 246, 956, 469, 419, 410, 556, 718, 859, 518, 261, 937, 230, 146, 860, 82, 82, 566, 763, 975, 548, 520, 139, 423, 302, 406, 750, 863, 73, 47, 207, 711, 3, 212, 305, 828, 292, 965, 600, 375, 987, 37, 112, 18, 80, 743, 849, 458, 526, 610, 59, 479, 623, 216, 44, 393, 899, 357, 203, 653, 655, 570, 568, 181, 662, 648, 778, 918, 279, 258, 340, 603, 314, 436, 765, 86, 352, 744, 898, 615, 166, 751, 819, 621, 789, 748, 303, 265, 258, 708, 332, 794, 677, 458, 775, 450, 584, 311, 292, 272, 662, 534, 275, 847, 461)).length == 39)
      // example: 27 < 86 < 114 < 119 < 125 < 141 < 164 < 199 < 227 < 233 < 325 < 354 < 355 < 388 < 408 < 435 < 480 < 483 < 526 < 545 < 570 < 571 < 618 < 637 < 678 < 687 < 759 < 767 < 770 < 786 < 807 < 837 < 859 < 866 < 879 < 917 < 956 < 975 < 987
  }
  @Test def testN175() {
    assertTrue("testN175() failed", longestIncreasingSubsequence(Array(927, 220, 489, 320, 60, 469, 439, 624, 620, 940, 827, 505, 886, 426, 798, 881, 517, 49, 327, 364, 624, 402, 996, 804, 267, 269, 790, 645, 793, 439, 223, 23, 883, 774, 385, 549, 858, 160, 796, 506, 101, 273, 843, 411, 695, 826, 899, 471, 281, 711, 177, 179, 95, 425, 799, 83, 706, 850, 163, 219, 970, 416, 253, 643, 245, 824, 306, 81, 80, 164, 337, 624, 616, 407, 474, 910, 798, 876, 686, 83, 389, 295, 623, 493, 49, 771, 828, 625, 726, 387, 377, 915, 122, 92, 465, 903, 912, 223, 833, 305, 122, 229, 803, 46, 394, 274, 259, 133, 37, 44, 394, 320, 244, 301, 780, 92, 849, 340, 560, 784, 18, 891, 676, 611, 805, 593, 650, 294, 601, 446, 698, 480, 300, 535, 101, 560, 294, 336, 484, 669, 297, 182, 259, 154, 236, 607, 718, 821, 50, 80, 94, 414, 540, 438, 135, 669, 272, 913, 969, 316, 339, 706, 986, 532, 418, 310, 140, 947, 113, 90, 616, 274, 247, 190, 342, 213, 958, 158, 496, 780, 962, 459, 170, 191, 598, 817, 568, 86, 781, 217, 797, 437, 291, 207, 642, 111, 193, 854, 11, 594, 143, 487, 26, 776, 329, 824, 575, 502, 273, 249, 133, 932, 733, 609, 337, 733, 628, 856, 817, 17, 258, 150, 847, 102, 381, 16, 185, 150, 580, 667, 311, 801, 571, 104, 664, 274, 885, 896, 96, 576, 831, 441, 386, 707, 197, 487, 222, 438, 147, 214, 552, 404, 210, 730, 349, 162, 301, 138, 530, 372, 183, 337, 867, 132, 490, 180, 892, 534, 278, 858, 760, 799, 845, 837, 803, 355, 663, 111, 182, 453, 743, 207, 727, 641, 937, 323, 514, 894, 430, 144, 665, 255, 638, 644, 11, 584, 744, 517, 748, 22, 97, 370, 624, 631, 30, 583, 53, 953, 344, 358, 348, 366, 820, 152, 971, 277, 355, 188, 691, 364, 325, 246, 985, 521, 189, 905, 500, 784, 793, 535, 546, 87, 656, 828, 510, 421, 384, 667, 306, 161, 243, 352, 181, 94, 101, 685, 993, 756, 517, 456, 3, 810, 173, 393, 992, 327, 592, 346, 385, 841, 952, 855, 75, 780, 280, 652, 413, 228, 836, 70, 655, 918, 876, 594, 699, 424, 647, 193, 539, 201, 633, 173, 7, 67, 171, 157, 536, 925, 212, 20, 70, 517, 57, 608, 731, 283, 590, 239, 866, 672, 97, 139, 47, 365, 799, 334, 405, 704, 389, 449, 934, 50, 501, 334, 906, 180, 163, 181, 375, 535, 739, 579, 192, 114, 858, 455, 422, 214, 509, 191, 104, 942, 313, 31, 680, 234, 376, 561, 876, 243, 68, 480, 150, 89, 132, 582, 432, 191, 313, 534, 199, 824, 755, 276, 163, 27, 421, 216, 344, 434, 985, 233, 236, 697, 273, 614, 77, 113, 539, 304, 118, 20, 392, 291, 750, 587, 434, 203, 510, 522, 464, 915, 285, 61, 671, 545, 594, 717, 382, 798, 468, 251, 22, 33, 273, 317, 132, 195, 625, 294, 13, 709, 175, 71, 541, 805, 148, 219, 691, 360, 655, 937, 461, 65, 141, 114, 699, 112, 793, 835, 690, 373, 624, 412, 888, 892, 107, 582, 31, 363, 746, 140, 9, 93, 250, 168, 710, 507, 771, 103, 556, 505, 680, 982, 43, 732, 883, 587, 723, 955, 84, 985, 765, 459, 974, 339, 524, 932, 887, 849, 774, 297, 458, 984, 794, 653, 395, 116, 888, 696, 206, 569, 135, 514, 428, 431, 647, 246, 387, 988, 380, 871, 440, 827, 691, 465, 36, 418, 124, 86, 24, 449, 156, 193, 47, 486, 326, 15, 239, 118, 614, 977, 370, 734, 130, 750, 703, 839, 541, 494, 577, 792, 745, 305, 105, 221, 711, 565, 812, 966, 390, 303, 563, 810, 119, 513, 363, 42, 569, 881, 209, 802, 437, 306, 116, 826, 584, 563, 398, 347, 512, 598, 896, 188, 989, 588, 177, 716, 334, 155, 395, 714, 485, 657, 995, 265, 672, 634, 339, 191, 117, 21, 277, 37, 593, 974, 990, 656, 925, 484, 700, 765, 245, 354, 566, 12, 478, 467, 615, 371, 220, 390, 390, 908, 957, 802, 845, 1, 470, 746, 323, 19, 399, 665, 848)).length == 46)
      // example: 60 < 81 < 83 < 92 < 122 < 133 < 135 < 140 < 158 < 170 < 191 < 217 < 249 < 258 < 274 < 301 < 337 < 344 < 348 < 355 < 364 < 384 < 393 < 413 < 424 < 449 < 501 < 535 < 579 < 582 < 587 < 594 < 625 < 691 < 699 < 710 < 732 < 765 < 774 < 794 < 827 < 839 < 881 < 896 < 989 < 995
  }
  @Test def testN176() {
    assertTrue("testN176() failed", longestIncreasingSubsequence(Array(845, 857, 901, 430, 269, 197, 502, 555, 376, 623, 205, 476, 943, 380, 172, 575, 492, 323, 279, 926, 538, 740, 235, 222, 795, 677, 623, 72, 164, 480, 686, 620, 678, 656, 229, 118, 364, 930, 295, 865, 276, 577, 819, 567, 452, 785, 6, 251, 963, 869, 675, 221, 145, 517, 340, 340, 787, 479, 451, 755, 799, 349, 353, 298, 408, 175, 434, 285, 503, 431, 563, 385, 942, 795)).length == 13)
      // example: 197 < 205 < 222 < 229 < 295 < 340 < 349 < 353 < 408 < 434 < 503 < 563 < 942
  }
  @Test def testN177() {
    assertTrue("testN177() failed", longestIncreasingSubsequence(Array(410, 50, 656, 401, 411, 245, 505, 214, 429, 348, 415, 697, 728, 148, 138, 442, 647, 276, 102, 679, 389, 167, 761, 336, 366, 128, 720, 607, 457, 850, 626, 903, 241, 187, 788, 968, 987, 589, 315, 91, 850, 865, 720, 824, 557, 72, 341, 42, 762, 519, 678, 268, 203, 118, 547, 963, 215, 485, 553, 271, 100, 843, 745, 302, 640, 293, 336, 271, 119, 576, 357, 672, 287, 755, 506, 45, 199, 723, 578, 870, 94, 116, 544, 571, 784, 121, 976, 830, 450, 889, 887, 45, 183, 174, 516, 435, 83, 611, 162, 570, 724, 217, 278, 960, 665, 286, 475, 203, 603, 123, 85, 785, 688, 960, 258, 528, 6, 982, 132, 255, 500, 40, 348, 487, 868, 575, 721, 458, 805, 937, 877, 750, 701, 741, 864, 382, 468, 918, 518, 654, 284, 330, 835, 400, 292, 485, 919, 360, 579, 975, 637, 576, 321, 734, 301, 9, 17, 185, 673, 31, 467, 387, 349, 551, 295, 384, 919, 736, 788, 951, 326, 435, 758, 452, 224, 232, 469, 249, 771, 630, 938, 72, 356, 415, 157, 840, 214, 814, 585, 161, 955, 462, 705, 485, 22, 984, 276, 142, 384, 200, 548, 126, 201, 413, 773, 134, 479, 299, 304, 975, 106, 55, 511, 447, 96, 62, 867, 968, 139, 378, 905, 787, 104, 930, 19, 564, 284, 629, 42, 898, 399, 107, 98, 517, 26, 320, 630, 220, 636, 478, 562, 363, 552, 286, 767, 966, 323, 34, 0, 188, 977, 426, 204, 970, 295, 193, 437, 906, 3, 835, 477, 625, 687, 189, 512, 162, 909, 249, 356, 418, 700, 77, 900, 833, 905, 847, 925, 673, 889, 407, 80, 471, 258, 985, 598, 947, 193, 829, 794, 373, 110, 261, 23, 662, 533, 466, 138, 216, 989)).length == 29)
      // example: 50 < 148 < 167 < 187 < 203 < 215 < 271 < 302 < 336 < 357 < 506 < 544 < 571 < 611 < 665 < 688 < 721 < 734 < 736 < 758 < 771 < 840 < 867 < 905 < 930 < 966 < 977 < 985 < 989
  }
  @Test def testN178() {
    assertTrue("testN178() failed", longestIncreasingSubsequence(Array(731, 619, 683, 980, 29, 29, 977, 231, 381, 557, 607, 537, 103, 901, 419, 347, 83, 201, 45, 451, 567, 712, 59, 975, 342, 70, 708, 374, 222, 883, 800, 403, 351, 812, 756, 367, 264, 148, 764, 257, 515, 302, 872, 228, 24, 322, 129, 813, 704, 762, 293, 272, 80, 999, 213, 190, 5, 5, 600, 533, 398, 600, 313, 988, 597, 281, 580, 593, 192, 137, 574, 890, 212, 384, 33, 268, 625, 562, 622, 579, 552, 120, 421, 630, 856, 766, 577, 662, 184, 518, 575, 699, 752, 225, 964, 131, 640, 821, 686, 408, 634, 71, 699, 725, 395, 798, 566, 653, 68, 282, 280, 463, 111, 839, 986, 66, 109, 610, 49, 913, 84, 734, 770, 651, 94, 827, 293, 307, 653, 245, 743, 862, 946, 644, 879, 414, 292, 669, 586, 602, 558, 748, 969, 135, 25, 124, 272, 464, 665, 541, 370, 237, 308, 97, 432, 139, 972, 547, 96, 856, 222, 772, 466, 617, 787, 884, 14, 634, 828, 713, 169, 361, 82, 942, 519, 471, 211, 371, 970, 444, 329, 949, 296, 814, 620, 643, 490, 533, 272, 404, 377, 63, 393, 783, 580, 347, 530, 281, 724, 876, 446, 413, 472, 156, 622, 995, 68, 58, 744, 512, 356, 770, 737, 637, 647, 551, 49, 751, 47, 599, 820, 354, 148, 235, 673, 682, 312, 137, 20, 504, 989, 137, 358, 110, 787, 592, 204, 735, 198, 892, 741, 454, 379, 301, 940, 841, 867, 804, 678, 921, 89, 731, 69, 769, 101, 832, 427, 601, 475, 976, 378, 926, 917, 780, 928, 855, 509, 426, 833, 495, 527, 570, 420, 962, 539, 19, 839, 381, 824, 466, 727, 807, 700, 902, 951, 982, 536, 3, 825, 327, 656, 882, 283, 270, 369, 241, 369, 14, 803, 900, 449, 853, 853, 855, 939, 335, 143, 238, 990, 606, 939, 228, 376, 955, 989, 668, 990, 27, 866, 224, 833, 777, 292, 252, 58, 780, 59, 429, 740, 204, 304, 227, 279, 999, 347, 912, 93, 178, 244, 308, 965, 358, 310, 863, 694, 233, 671, 49, 885, 86, 613, 50, 399, 226, 331, 17, 402, 916, 928, 571, 149, 416, 336, 627, 352, 783, 348, 560, 511, 855, 949, 623, 88, 91, 838, 733, 915, 615, 79, 417, 985, 306, 102, 157, 733, 143, 888, 431, 888, 570, 341, 560, 201, 276, 465, 104, 865, 283, 222, 83, 363, 202, 175, 700, 258, 592, 144, 325, 222, 863, 361, 792, 190, 155, 289, 493, 209, 188, 607, 721, 736, 642, 140, 167, 811, 789, 500, 245, 763, 110, 396, 766, 199, 870, 661, 455, 673, 617, 438, 649, 400, 61, 160, 666, 616, 549, 522, 295, 470, 757, 845, 258, 117, 953, 538, 996, 567, 582, 664, 296, 613, 877, 170, 92, 663, 871, 540, 780, 279, 898, 958, 613, 487, 695, 841, 771, 691, 172, 150, 639, 273, 229, 262, 304, 869, 866, 916, 476, 289, 916, 327, 660, 954, 466, 819, 914, 389, 163, 407, 551, 256, 127, 570, 677, 982, 327, 487, 78, 954, 277, 463, 208, 301, 40, 997, 261, 10, 840, 748, 291, 598, 555, 21, 620, 125, 50, 597, 875, 959, 668, 651, 60, 810, 836, 847, 174, 761, 185, 854, 153, 290, 250, 138, 414, 894, 236, 495, 975, 801, 49, 800, 387, 89, 695, 143, 958, 939, 562, 195, 27, 504, 807, 636, 639, 167, 958, 354, 804, 269, 586, 987, 918, 863, 385, 900, 917, 808, 547, 559, 312, 254, 921, 386, 666, 350, 163, 992, 612, 816, 373, 49, 775, 373, 999, 733, 412, 652, 56, 342, 146, 277, 670, 194, 946, 893, 525, 143, 962, 535, 10, 114, 549, 404, 98, 720, 580, 697, 676, 381, 299, 415, 319, 51, 826, 616, 433, 618, 422)).length == 46)
      // example: 29 < 45 < 59 < 70 < 148 < 190 < 192 < 212 < 268 < 282 < 293 < 307 < 308 < 329 < 347 < 356 < 358 < 379 < 381 < 399 < 402 < 416 < 417 < 431 < 465 < 493 < 500 < 522 < 538 < 567 < 582 < 613 < 639 < 660 < 677 < 748 < 810 < 836 < 847 < 854 < 894 < 939 < 958 < 987 < 992 < 999
  }
}


